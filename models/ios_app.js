const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const AppSchema = new Schema({
  trackId: { type: Number, required: [true, 'trackId is required.'] },
  trackName: { type: String },
  trackCensoredName: { type: String },
  trackViewUrl: { type: String },
  artistId: { type: Number },
  artistName: { type: String },
  artistViewUrl: { type: String },
  sellerName: { type: String },
  sellerUrl: { type: String },
  artworkUrl60: { type: String },
  artworkUrl100: { type: String },
  artworkUrl512: { type: String },
  screenshotUrls: { type: Array },
  ipadScreenshotUrls: { type: Array },
  appletvScreenshotUrls: { type: Array },
  price: { type: Number },
  formattedPrice: { type: String },
  currency: { type: String },
  fileSizeBytes: { type: String },
  version: { type: String },
  currentVersionReleaseDate: { type: String },
  releaseDate: { type: String },
  releaseNotes: { type: String },
  description: { type: String },
  averageUserRating: { type: Number },
  userRatingCount: { type: Number },
  averageUserRatingForCurrentVersion: { type: Number },
  userRatingCountForCurrentVersion: { type: Number },
  bundleId: { type: String },
  primaryGenreId: { type: Number },
  primaryGenreName: { type: String },
  genreIds: { type: Array },
  genres: { type: Array },
  kind: { type: String },
  wrapperType: { type: String },
  minimumOsVersion: { type: String },
  trackContentRating: { type: String },
  contentAdvisoryRating: { type: String },
  isGameCenterEnabled: { type: Boolean },
  isVppDeviceBasedLicensingEnabled: { type: Boolean },
  features: { type: Array },
  supportedDevices: { type: Array },
  advisories: { type: Array },
  languageCodesISO2A: { type: Array },
});

const App = mongoose.model('app', AppSchema);

module.exports = App;
